service: sls-rest-accounts-password

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  babelPresets:
    - latest
  dynamodb:
    start:
      migrate: true
  serverless-offline:
    resourceRoutes: true      

provider:
  name: aws
  runtime: nodejs6.10  
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    REGION: ap-southeast-2
    APP_SECRET: 1234567890XYz
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: Email
            AttributeType: S            
        KeySchema:
          -
            AttributeName: Email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

functions:
  index:
    handler: home.index
    events:
      - http:
          path: /
          method: get
          cors: true
  userCreate:
    handler: api/Users/methods.create
    events:
      - http:
          path: /user
          method: post
          cors: true
  userGet:
    handler: api/Users/methods.get
    events:
      - http:
          path: /user
          method: get
          cors: true
  userToken:
    handler: api/Users/methods.token
    events:
      - http:
          path: /token
          method: post
          cors: true      
